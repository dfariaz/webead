@model WebEAD.Models.ForgotPasswordMetadado
@using WebEAD
@{
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
    ViewBag.Title = "Esqueceu a Senha?";
}

<div class="ui middle aligned center aligned grid">
    <div class="column">
        <h2 class="ui teal image header">
            <div class="content">
                Esqueceu a Senha?
            </div>
        </h2>
        @using (Html.BeginForm("ForgotPassword", "Account", FormMethod.Post, new { @class = "ui large fluid form" }))
        {
            @Html.AntiForgeryToken() // previne o ataque CSRF
                                    <div class="ui stacked segment">
                                        <div class="field">
                                            <div class="ui left icon input">
                                                <i class="user icon"></i>
                                                @Html.TextBoxFor(a => a.eus_login, new { placeholder = "Nome de Usuário" })
                                                <div class="ui teal basic label">
                                                    @Html.ValidationMessageFor(a => a.eus_login)
                                                </div>
                                            </div>
                                        </div>
                                        <input type="submit" class="ui fluid large teal submit button" value="Enviar" />
                                    </div>
            if (!ViewData.ModelState.IsValid)
            {
                foreach (var modelError in Html.ViewData.ModelState.SelectMany(keyValuePair => keyValuePair.Value.Errors))
                {
                    <div class="ui negative message"> 
                        <div class="header">
                            @modelError.ErrorMessage
                        </div>
                    </div>
                }
            }
        }
    </div>

</div>
<script type="text/javascript">
    $(function () {

        var systemMessage = @Html.Raw(TempData[WebEAD.Controllers.MasterController.SystemMessage]);

        showMessage(systemMessage);
    });


    function showMessage(message) {
        toastr[message.type](message.content, message.title);
    }
</script>
